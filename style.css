/* Observaciones generales sobre el maquetado
- Para que las fuentes se nos vean en bold, debemos importar ese estilo desde Google Fonts. En la ventana de seleccion de google
fonts, veremos una pesta√±a "customize": ahi podemos seleccionar distintos pesos para la fuente. 700 suele ser bold. Nuestro selector deberia quedar asi:
@import url('https://fonts.googleapis.com/css?family=Montserrat:400,700&display=swap');

- El div "wayne" deberia empezar un poco mas abajo, en sentido vertical, que los demas. 
Un margin-top o un display: flex, flex-direction: column, justify-content: center, serian posibles soluciones

- Si le quitamos el width de 40% al div de contact us, nos evitamos el problema de que los iconos se achiquen y pierdan la forma
redonda al achicar la pantalla

- El input esta un poco angosto. Yo haria que label fuera flex, y le daria al input type email flex 2, y al input submit flex 1 para que siempre
ocupen el 100% del label y se vean mas anchos. Esto tambien soluciona el problema de que se pongan uno debajo del otro en algunas resoluciones. 

- En resoluciones de entre 600 y 900px, las columnas 1 y 2, y las columnas 3 y 4, se ven muy juntas entre si. Quiza un margin en
la media query pueda ser una solucion sencilla. En esa misma resolucion, hay muy poco aire en la caja en el bottom. Un padding 
haria que se viera mucho mejor. 

- Atencion a los iconos en resoluciones menores a 600px: no deberian ocupar el 100% del ancho, sino quedar ubicados a la izquierda

- El CSS en general esta desordenado: es bueno escribirlo en el mismo orden que el HTML, asi es mas rapido ubicar donde se encuentra
el estilo de un elemento en particular. 


*/


@import url('https://fonts.googleapis.com/css?family=Montserrat&display=swap');

body {
    margin: auto
    /* La convencion es eliminar los margenes con margin 0, no auto. Auto es variable dependiendo del navegador, y puede
    tener resultados no esperados.  */
}

footer {
    color: white;
    background-color: #004A99;
    height: 300px;
    /* no es recomendable dar un height fijo a los contenedores, sino permitir que sea su contenido el que les fije la altura. 
    En este caso, si por ejemplo le agregaramos mas texto a uno de los divs, "rebalsaria" el footer. */
    font-family: 'Montserrat', sans-serif;
    font-size: 14px;
    padding-right: 10%;
    padding-left: 10%;
    padding-bottom: 8px;
    padding-top: 8px;
    /* Creo que lo mencionamos muy de pasada en clase, pero tanto los margin como los padding se pueden abreviar
    En lugar de escribir los 4 selectores, podriamos decir:
    padding: 8px 10%
    Eso significa: 8px arriba y abajo, 10% a ambos lados
    Voy a intentar explicarlo mejor en clase */
    display: flex;
    flex-wrap: nowrap;
    /* No es necesario aclarar nowrap, es asi por defecto */
    line-height: 1.5;
}


h1 {
    margin-top: auto
}

section {
    display: flex;
    justify-content: space-evenly;
}

.Columna1{
    width:60%;
}

.Columna3 {
    width: 40%;
}

.image {
    color: white;
    display: flex;
    justify-content: space-between;
    padding-right: 10%;
    margin: 0;   
    /* no es necesario margin: 0 en este caso  */
}

.icon {
    width: 35px;
    height: 35px;
    background-color: #007BFF;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    
}

.icon:hover {
    background-color: #0062CC;
}

.Columna4{
    width:53%;
    letter-spacing: 0.001em;
}

span {
    font-weight: bolder;
    /* como no habiamos importado la fuente en bold, este selector no tiene ninguna consecuencia */
}

.copyright {
    background-color: #00428A;
    height: 150px;
}


ul {
    padding: 0;
    list-style-type: none;
    line-height: 2;    
}



.parte1 {
    display: flex;
    flex: 1;
}

.parte2 {
    display: flex;
    flex: 1;
}

input {
    border: none;
    padding: 0;
    height: 33px;
}

.s{
    /* este no es un buen nombre de clase, ya que no es descriptivo. no queda claro a que elemento se refiere. 
    un buen nombre seria, por ejemplo, "submit-button", o "submit" a secas */
   background-color: #007BFF;
   border: none;
   padding: 0;
   height: 33px;
   width: 90px;
   color: #fff;   
}

input[type=submit]:hover {
    background-color: #0062CC;
}

/* input[type=submit] y ".s" refieren al mismo elemento: es confuso utilizar nomenclaturas distintas */

.copyright {
   background-color: #00428A;
   font-family: 'Montserrat', sans-serif;
   color:#fff;
   font-size: 15px;;
   height: 150px;
   display: flex;
   justify-content: center;
   align-items: center;
   text-align: center;
}

@media (min-width: 601px) and (max-width: 900px) {
    footer {
        display: flex;
        flex-direction: column;
        /* si eliminamos el height innecesario de footer en desktop, este height de 100% se vuelve innecesario en las media queries */
        height: 100%;
    }
    
    .parte1 {
        display: flex;
     
    }
    .Columna1 {
        flex: 1;
    }
    .Columna2 {
        flex: 1;
    }
    

    .parte2 {
        display: flex;
        flex: 1;}

    .Columna3 {
        flex: 1;
    }
    .Columna4 {
        flex: 1;
    }
    .copyright {
        
        height: 100%;
    }
    
    input, .s {   
        height: 33px;
    }

    /* este ultimo selector parece ser innecesario, ya que esa altura ya esta asi desde el css anterior  */
}



@media (max-width: 600px) {
    footer {
        display: flex;
        flex-direction: column;
        font-size: smaller;
        height: 100%;        
    }
    
    .parte1 {
        display: flex;
        /* no es necesario repetir "display: flex" */
        flex-wrap: wrap;
    }

    .parte2 {
        display: flex;
                /* no es necesario repetir "display: flex" */
        flex-wrap: wrap;
    }

    .Columna1 {
        width: 100%;
    }
    
    
    .Columna2 {
        width: 100%;
    }

    .Columna3 {
        width: 100%;
    }

    .Columna4 {
        width: 100%;
    }

    .copyright {
        font-size: 11px;
        height: 100%;
    }
}